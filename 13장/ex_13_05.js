// 1. 함수를 어디서 호출했는지에 따라 함수위 상위 스코프를 결정한다. 이 방식은 동적 스코프라한다.
// 2. 함수를 어디서 정의했는지에 따라 함수의 상위 스코프를 결정한다. 이 방힉은 렉시컬 스코프 또는 정적 스코프라 한다.

// 동적 스코프는 함수를 정의하는 시점에는 함수가 어디서 호출될지 알 수 없다. 함수가 호출되는 시점에 동적으로 상위 스코프를 결정해야 하기 때문에 동적 스코프라 부른다.
// 정적 스코프는 상위 스코프가 동적으로 변하지 않고 함수 정의가 평가되는 시점에 상위 스코프가 정적으로 결정되기 때문에 정적 스코프라 부른다.

// 자바스크립트는 정적 스코프, 즉 렉시컬 스코프를 따르므로 함수를 어디서 호출했는지가 아니라 함수를 어디서 정의했는지에 따라 상위 스코프를 결정한다.
// 즉 호출된 위치는 상위 스코프 결정에 어떠한 영향도 주지 않으므로, 함수의 상위 스코프는 언제나 자신이 정의된 스코프다.
var x = 1
function foo() {
    var x = 10
    bar()
}
function bar() {
    console.log(x)
}